# -*- coding: utf-8 -*-
"""load_predict.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pM1QsyPabWjjRsfk5ptF6teJhPKlRyCH
"""

import h5py
from sklearn.naive_bayes import MultinomialNB

# Load the model from the HDF5 file
with h5py.File("model.h5", "r") as f:
    # Load the model parameters
    alpha = f["model/alpha"][()]
    class_count = f["model/class_count"][()]
    feature_count = f["model/feature_count"][()]

    classes = f["model/classes"][()]

    # Create a new MultinomialNB model
    model = MultinomialNB(alpha=alpha)
    model.class_count_ = class_count
    model.feature_count_ = feature_count

#    model.classes_ = [int(c) for c in classes]

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report

# Load the data
df = pd.read_csv("airline_feedback_data.csv")

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(df["feedback"], df["sentiment"], test_size=0.2, random_state=42)

vectorizer = CountVectorizer()
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

y_pred = model.predict(X_test_vec)
print(y_pred)

print(classification_report(y_test, y_pred))